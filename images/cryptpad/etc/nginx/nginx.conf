user cryptpad;
worker_processes auto;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;
    server_tokens off;
    server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # Logging Settings
    ##

    log_format json escape=json '{'
        '"time": "$time_iso8601", '
        '"remote_addr": "$remote_addr", '
        '"http_x_forwarded_for": "$http_x_forwarded_for", '
        '"body_bytes_sent": "$body_bytes_sent", '
        '"request_time": "$request_time", '
        '"status": "$status", '
        '"request_method": "$request_method", '
        '"request_uri": "$request_uri", '
        '"http_referrer": "$http_referer", '
        '"http_user_agent": "$http_user_agent", '
        '"upstream_address": "$upstream_addr", '
        '"upstream_status": "$upstream_status", '
        '"upstream_response_time": "$upstream_response_time", '
        '"upstream_response_length": "$upstream_response_length", '
        '"upstream_cache_status": "$upstream_cache_status"'
    '}';

    access_log /dev/stdout json;
    error_log stderr error;

    server {
        listen 80 default_server;
        server_name _;

        real_ip_header $REAL_IP_HEADER;
        set_real_ip_from $REAL_IP_TRUSTED_IPS;
        real_ip_recursive on;

        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options nosniff;
        add_header Access-Control-Allow-Origin "${URL_DOMAIN}";
        # add_header X-Frame-Options "SAMEORIGIN";

        # Opt out of Google's FLoC Network
        add_header Permissions-Policy interest-cohort=();

        # Enable SharedArrayBuffer in Firefox (for .xlsx export)
        add_header Cross-Origin-Resource-Policy cross-origin;
        add_header Cross-Origin-Embedder-Policy require-corp;

        # Insert the path to your CryptPad repository root here
        root /cryptpad;
        index index.html;
        error_page 404 /customize.dist/404.html;

        # any static assets loaded with "ver=" in their URL will be cached for a year
        if ($args ~ ver=) {
            set $cacheControl max-age=31536000;
        }
        # This rule overrides the above caching directive and makes things somewhat less efficient.
        # We had inverted them as an optimization, but Safari 16 introduced a bug that interpreted
        # some important headers incorrectly when loading these files from cache.
        # This is why we can't have nice things :(
        if ($uri ~ ^(\/|.*\/|.*\.html)$) {
            set $cacheControl no-cache;
        }

        # Will not set any header if it is emptystring
        add_header Cache-Control $cacheControl;

        # CSS can be dynamically set inline, loaded from the same domain, or from $url_domain
        set $styleSrc   "'unsafe-inline' 'self'";

        # connect-src restricts URLs which can be loaded using script interfaces
        # if you have configured your instance to use a dedicated $files_domain or $api_domain
        # you will need to add them below as: https://${files_domain} and https://${api_domain}
        set $connectSrc "'self' blob:";

        # fonts can be loaded from data-URLs or the main domain
        set $fontSrc    "'self' data:";

        # images can be loaded from anywhere, though we'd like to deprecate this as it allows the use of images for tracking
        set $imgSrc     "'self' data: blob:";

        # frame-src specifies valid sources for nested browsing contexts.
        # this prevents loading any iframes from anywhere other than the sandbox domain
        set $frameSrc   "'self' blob:";

        # specifies valid sources for loading media using video or audio
        set $mediaSrc   "blob:";

        # defines valid sources for webworkers and nested browser contexts
        # deprecated in favour of worker-src and frame-src
        set $childSrc   "'self'";

        # specifies valid sources for Worker, SharedWorker, or ServiceWorker scripts.
        # supercedes child-src but is unfortunately not yet universally supported.
        set $workerSrc  "'self'";

        # frame-ancestors specifies which origins can embed your CryptPad instance
        # this must include 'self' and your main domain (over HTTPS) in order for CryptPad to work
        # if you have enabled remote embedding via the admin panel then this must be more permissive.
        # note: cryptpad.fr permits web pages served via https: and vector: (element desktop app)
        set $frameAncestors "'self'";

        # these URLs require eval/inline permissions
        set $safe 1;
        if ($uri ~ ^\/(sheet|doc|presentation)\/inner.html.*$) { set $safe 0; }
        if ($uri ~ ^\/common\/onlyoffice\/.*\/.*\.html.*$) { set $safe 0; }
        if ($uri ~ ^\/unsafeiframe\/inner\.html.*$) { set $safe 0; }

        if ($safe = 1) {
            set $scriptSrc "'self'";
        }
        if ($safe = 0) {
            set $scriptSrc "'self' resource: 'unsafe-eval' 'unsafe-inline'";
        }

        # Finally, set all the rules you composed above.
        add_header Content-Security-Policy "default-src 'none'; child-src $childSrc; worker-src $workerSrc; media-src $mediaSrc; style-src $styleSrc; script-src $scriptSrc; connect-src $connectSrc; font-src $fontSrc; img-src $imgSrc; frame-src $frameSrc; frame-ancestors $frameAncestors";

        # The nodejs process can handle all traffic whether accessed over websocket or as static assets
        # We prefer to serve static content from nginx directly and to leave the API server to handle
        # the dynamic content that only it can manage. This is primarily an optimization
        location ^~ /cryptpad_websocket {
            proxy_pass http://localhost:3000;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # WebSocket support (nginx 1.4)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection upgrade;
        }

        location ^~ /customize.dist/ {
            # This is needed in order to prevent infinite recursion between /customize/ and the root
        }
        # try to load customizeable content via /customize/ and fall back to the default content
        # located at /customize.dist/
        # This is what allows you to override behaviour.
        location ^~ /customize/ {
            rewrite ^/customize/(.*)$ $1 break;
            try_files /customize/$uri /customize.dist/$uri;
        }

        # /api/config is loaded once per page load and is used to retrieve
        # the caching variable which is applied to every other resource
        # which is loaded during that session.
        location ~ ^/api/.*$ {
            proxy_pass http://localhost:3000;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # These settings prevent both NGINX and the API server
            # from setting the same headers and creating duplicates
            proxy_hide_header Cross-Origin-Resource-Policy;
            add_header Cross-Origin-Resource-Policy cross-origin;
            proxy_hide_header Cross-Origin-Embedder-Policy;
            add_header Cross-Origin-Embedder-Policy require-corp;
        }

        # encrypted blobs are immutable and are thus cached for a year
        location ^~ /blob/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' "${URL_DOMAIN}";
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'application/octet-stream; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            add_header X-Content-Type-Options nosniff;
            add_header Cache-Control max-age=31536000;
            add_header 'Access-Control-Allow-Origin' "${URL_DOMAIN}";
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Content-Length';
            add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Content-Length';
            try_files $uri =404;
        }

        # the "block-store" serves encrypted payloads containing users' drive keys
        # these payloads are unlocked via login credentials. They are mutable
        # and are thus never cached. They're small enough that it doesn't matter, in any case.
        location ^~ /block/ {
            add_header X-Content-Type-Options nosniff;
            add_header Cache-Control max-age=0;
            try_files $uri =404;
        }

        # This block provides an alternative means of loading content
        # otherwise only served via websocket. This is solely for debugging purposes,
        # and is thus not allowed by default.
        #location ^~ /datastore/ {
            #add_header Cache-Control max-age=0;
            #try_files $uri =404;
        #}

        # The nodejs server has some built-in forwarding rules to prevent
        # URLs like /pad from resulting in a 404. This simply adds a trailing slash
        # to a variety of applications.
        location ~ ^/(register|login|settings|user|pad|drive|poll|slide|code|whiteboard|file|media|profile|contacts|todo|filepicker|debug|kanban|sheet|support|admin|notifications|teams|calendar|presentation|doc|form|report|convert|checkup)$ {
            rewrite ^(.*)$ $1/ redirect;
        }

        # Finally, serve anything the above exceptions don't govern.
        try_files /customize/www/$uri /customize/www/$uri/index.html /www/$uri /www/$uri/index.html /customize/$uri;
    }
}
